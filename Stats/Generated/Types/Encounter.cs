//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace WarcraftLogs.Public;


public static class EncounterExtensions
{
    [GraphMethod("characterRankings")]
    public static JSON CharacterRankings(this Encounter  encounter, [GraphArgument("Int")] int? bracket = null, [GraphArgument("Int")] int? difficulty = null, [GraphArgument("String")] string filter = null, [GraphArgument("Int")] int? page = null, [GraphArgument("Int")] int? partition = null, [GraphArgument("String")] string serverRegion = null, [GraphArgument("String")] string serverSlug = null, [GraphArgument("Int")] int? size = null, [GraphArgument("LeaderboardRank")] LeaderboardRank? leaderboard = null, [GraphArgument("HardModeLevelRankFilter")] HardModeLevelRankFilter? hardModeLevel = null, [GraphArgument("CharacterRankingMetricType")] CharacterRankingMetricType? metric = null, [GraphArgument("Boolean")] bool? includeCombatantInfo = null, [GraphArgument("String")] string className = null, [GraphArgument("String")] string specName = null, [GraphArgument("ExternalBuffRankFilter")] ExternalBuffRankFilter? externalBuffs = null, [GraphArgument("Int")] int? covenantID = null, [GraphArgument("Int")] int? soulbindID = null)
    {
        return encounter.GetMethodValue<JSON>("characterRankings", bracket, difficulty, filter, page, partition, serverRegion, serverSlug, size, leaderboard, hardModeLevel, metric, includeCombatantInfo, className, specName, externalBuffs, covenantID, soulbindID);
    }

    [GraphMethod("fightRankings")]
    public static JSON FightRankings(this Encounter  encounter, [GraphArgument("Int")] int? bracket = null, [GraphArgument("Int")] int? difficulty = null, [GraphArgument("String")] string filter = null, [GraphArgument("Int")] int? page = null, [GraphArgument("Int")] int? partition = null, [GraphArgument("String")] string serverRegion = null, [GraphArgument("String")] string serverSlug = null, [GraphArgument("Int")] int? size = null, [GraphArgument("LeaderboardRank")] LeaderboardRank? leaderboard = null, [GraphArgument("HardModeLevelRankFilter")] HardModeLevelRankFilter? hardModeLevel = null, [GraphArgument("FightRankingMetricType")] FightRankingMetricType? metric = null)
    {
        return encounter.GetMethodValue<JSON>("fightRankings", bracket, difficulty, filter, page, partition, serverRegion, serverSlug, size, leaderboard, hardModeLevel, metric);
    }

}

/// <summary>
/// A single encounter for the game.
/// </summary>
public partial class Encounter : GraphQLTypeBase
{
    /// <summary>
    /// The ID of the encounter.
    /// </summary>
    [JsonPropertyName("id")]
    public int Id { get; set; }

    /// <summary>
    /// The localized name of the encounter.
    /// </summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    private LazyProperty<JSON> _characterRankings = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON CharacterRankings => _characterRankings.Value(() => GetFirstMethodValue<JSON>("characterRankings"));

    private LazyProperty<JSON> _fightRankings = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON FightRankings => _fightRankings.Value(() => GetFirstMethodValue<JSON>("fightRankings"));

    /// <summary>
    /// The zone that this encounter is found in.
    /// </summary>
    [JsonPropertyName("zone")]
    public Zone Zone { get; set; }

    /// <summary>
    /// The Blizzard journal ID, used as the identifier in the encounter journal and various Blizzard APIs like progression.
    /// </summary>
    [JsonPropertyName("journalID")]
    public int JournalID { get; set; }

}

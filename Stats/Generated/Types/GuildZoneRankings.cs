//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace WarcraftLogs.Public;


public static class GuildZoneRankingsExtensions
{
    [GraphMethod("progress")]
    public static WorldRegionServerRankPositions Progress(this GuildZoneRankings  guildZoneRankings, [GraphArgument("Int")] int? size = null)
    {
        return guildZoneRankings.GetMethodValue<WorldRegionServerRankPositions>("progress", size);
    }

    [GraphMethod("speed")]
    public static WorldRegionServerRankPositions Speed(this GuildZoneRankings  guildZoneRankings, [GraphArgument("Int")] int? size = null, [GraphArgument("Int")] int? difficulty = null)
    {
        return guildZoneRankings.GetMethodValue<WorldRegionServerRankPositions>("speed", size, difficulty);
    }

    [GraphMethod("completeRaidSpeed")]
    public static WorldRegionServerRankPositions CompleteRaidSpeed(this GuildZoneRankings  guildZoneRankings, [GraphArgument("Int")] int? size = null, [GraphArgument("Int")] int? difficulty = null)
    {
        return guildZoneRankings.GetMethodValue<WorldRegionServerRankPositions>("completeRaidSpeed", size, difficulty);
    }

}

/// <summary>
/// A guild's rankings within a zone.
/// </summary>
public partial class GuildZoneRankings : GraphQLTypeBase
{
    private LazyProperty<WorldRegionServerRankPositions> _progress = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public WorldRegionServerRankPositions Progress => _progress.Value(() => GetFirstMethodValue<WorldRegionServerRankPositions>("progress"));

    private LazyProperty<WorldRegionServerRankPositions> _speed = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public WorldRegionServerRankPositions Speed => _speed.Value(() => GetFirstMethodValue<WorldRegionServerRankPositions>("speed"));

    private LazyProperty<WorldRegionServerRankPositions> _completeRaidSpeed = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public WorldRegionServerRankPositions CompleteRaidSpeed => _completeRaidSpeed.Value(() => GetFirstMethodValue<WorldRegionServerRankPositions>("completeRaidSpeed"));

}

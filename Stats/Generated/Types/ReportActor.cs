//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace WarcraftLogs.Public;


/// <summary>
/// The ReportActor represents a single player, pet or NPC that occurs in the report.
/// </summary>
public partial class ReportActor : GraphQLTypeBase
{
    /// <summary>
    /// The game ID of the actor.
    /// </summary>
    [JsonPropertyName("gameID")]
    public double? GameID { get; set; }

    /// <summary>
    /// An icon to use for the actor. For pets and NPCs, this will be the icon the site chose to represent that actor.
    /// </summary>
    [JsonPropertyName("icon")]
    public string Icon { get; set; }

    /// <summary>
    /// The report ID of the actor. This ID is used in events to identify sources and targets.
    /// </summary>
    [JsonPropertyName("id")]
    public int? Id { get; set; }

    /// <summary>
    /// The name of the actor.
    /// </summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// The report ID of the actor's owner if the actor is a pet.
    /// </summary>
    [JsonPropertyName("petOwner")]
    public int? PetOwner { get; set; }

    /// <summary>
    /// The normalized server name of the actor.
    /// </summary>
    [JsonPropertyName("server")]
    public string Server { get; set; }

    /// <summary>
    /// The sub-type of the actor, for players it's their class, and for NPCs, they are further subdivided into normal NPCs and bosses.
    /// </summary>
    [JsonPropertyName("subType")]
    public string SubType { get; set; }

    /// <summary>
    /// The type of the actor, i.e., if it is a player, pet or NPC.
    /// </summary>
    [JsonPropertyName("type")]
    public string Type { get; set; }

}

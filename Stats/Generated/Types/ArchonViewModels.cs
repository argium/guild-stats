//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace WarcraftLogs.Public;


public static class ArchonViewModelsExtensions
{
    [GraphMethod("translations")]
    public static JSON Translations(this ArchonViewModels  archonViewModels, [GraphArgument("[String]")] List<string> keys = null)
    {
        return archonViewModels.GetMethodValue<JSON>("translations", keys);
    }

    [GraphMethod("header")]
    public static JSON Header(this ArchonViewModels  archonViewModels, [GraphArgument("String")] string gameSlug = null)
    {
        return archonViewModels.GetMethodValue<JSON>("header", gameSlug);
    }

    [GraphMethod("buildsZonePage")]
    public static JSON BuildsZonePage(this ArchonViewModels  archonViewModels, [GraphArgument("String")] string gameSlug = null, [GraphArgument("String")] string rankingsSlug = null, [GraphArgument("String")] string zoneTypeSlug = null, [GraphArgument("String")] string difficultySlug = null, [GraphArgument("String")] string encounterSlug = null, [GraphArgument("String")] string affixesSlug = null)
    {
        return archonViewModels.GetMethodValue<JSON>("buildsZonePage", gameSlug, rankingsSlug, zoneTypeSlug, difficultySlug, encounterSlug, affixesSlug);
    }

    [GraphMethod("buildsSpecPage")]
    public static JSON BuildsSpecPage(this ArchonViewModels  archonViewModels, [GraphArgument("String")] string gameSlug = null, [GraphArgument("String")] string classSlug = null, [GraphArgument("String")] string specSlug = null, [GraphArgument("String")] string zoneTypeSlug = null, [GraphArgument("String")] string categorySlug = null, [GraphArgument("String")] string difficultySlug = null, [GraphArgument("String")] string encounterSlug = null, [GraphArgument("String")] string affixesSlug = null)
    {
        return archonViewModels.GetMethodValue<JSON>("buildsSpecPage", gameSlug, classSlug, specSlug, zoneTypeSlug, categorySlug, difficultySlug, encounterSlug, affixesSlug);
    }

    [GraphMethod("buildsClassesAndSpecsPage")]
    public static JSON BuildsClassesAndSpecsPage(this ArchonViewModels  archonViewModels, [GraphArgument("String")] string gameSlug = null)
    {
        return archonViewModels.GetMethodValue<JSON>("buildsClassesAndSpecsPage", gameSlug);
    }

    [GraphMethod("ability")]
    public static JSON Ability(this ArchonViewModels  archonViewModels, [GraphArgument("Int")] int? id = null)
    {
        return archonViewModels.GetMethodValue<JSON>("ability", id);
    }

    [GraphMethod("articleCategory")]
    public static JSON ArticleCategory(this ArchonViewModels  archonViewModels, [GraphArgument("String")] string articleCategorySlug = null)
    {
        return archonViewModels.GetMethodValue<JSON>("articleCategory", articleCategorySlug);
    }

    [GraphMethod("articleSlugs")]
    public static JSON ArticleSlugs(this ArchonViewModels  archonViewModels, [GraphArgument("String")] string articleCategorySlug = null, [GraphArgument("String")] string siteName = null)
    {
        return archonViewModels.GetMethodValue<JSON>("articleSlugs", articleCategorySlug, siteName);
    }

    [GraphMethod("article")]
    public static JSON Article(this ArchonViewModels  archonViewModels, [GraphArgument("String")] string articleSlug = null, [GraphArgument("String")] string articleCategorySlug = null, [GraphArgument("String")] string siteName = null)
    {
        return archonViewModels.GetMethodValue<JSON>("article", articleSlug, articleCategorySlug, siteName);
    }

    [GraphMethod("cmsNavigation")]
    public static JSON CmsNavigation(this ArchonViewModels  archonViewModels, [GraphArgument("String")] string currentSlug = null)
    {
        return archonViewModels.GetMethodValue<JSON>("cmsNavigation", currentSlug);
    }

    [GraphMethod("pageOfArticlePreviews")]
    public static JSON PageOfArticlePreviews(this ArchonViewModels  archonViewModels, [GraphArgument("String")] string articleCategorySlug = null, [GraphArgument("Int")] int? pageNumber = null, [GraphArgument("String")] string siteName = null)
    {
        return archonViewModels.GetMethodValue<JSON>("pageOfArticlePreviews", articleCategorySlug, pageNumber, siteName);
    }

    [GraphMethod("snippets")]
    public static JSON Snippets(this ArchonViewModels  archonViewModels, [GraphArgument("[String]")] List<string> snippetSlugs = null)
    {
        return archonViewModels.GetMethodValue<JSON>("snippets", snippetSlugs);
    }

    [GraphMethod("reportPage")]
    public static JSON ReportPage(this ArchonViewModels  archonViewModels, [GraphArgument("String!")] string reportCode, [GraphArgument("Int")] int? userId = null)
    {
        return archonViewModels.GetMethodValue<JSON>("reportPage", userId, reportCode);
    }

    [GraphMethod("fightPage")]
    public static JSON FightPage(this ArchonViewModels  archonViewModels, [GraphArgument("String!")] string reportCode, [GraphArgument("Int!")] int fightId, [GraphArgument("Int")] int? userId = null)
    {
        return archonViewModels.GetMethodValue<JSON>("fightPage", userId, reportCode, fightId);
    }

    [GraphMethod("characterPage")]
    public static JSON CharacterPage(this ArchonViewModels  archonViewModels, [GraphArgument("Int!")] int characterId)
    {
        return archonViewModels.GetMethodValue<JSON>("characterPage", characterId);
    }

    [GraphMethod("characterPageData")]
    public static JSON CharacterPageData(this ArchonViewModels  archonViewModels, [GraphArgument("Int!")] int characterId, [GraphArgument("Int")] int? userId = null)
    {
        return archonViewModels.GetMethodValue<JSON>("characterPageData", userId, characterId);
    }

}

public partial class ArchonViewModels : GraphQLTypeBase
{
    [JsonPropertyName("user")]
    public JSON User { get; set; }

    [JsonPropertyName("googleAnalytics")]
    public JSON GoogleAnalytics { get; set; }

    [JsonPropertyName("game")]
    public JSON Game { get; set; }

    private LazyProperty<JSON> _translations = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON Translations => _translations.Value(() => GetFirstMethodValue<JSON>("translations"));

    private LazyProperty<JSON> _header = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON Header => _header.Value(() => GetFirstMethodValue<JSON>("header"));

    [JsonPropertyName("headerTitle")]
    public JSON HeaderTitle { get; set; }

    [JsonPropertyName("footer")]
    public JSON Footer { get; set; }

    [JsonPropertyName("indexPage")]
    public JSON IndexPage { get; set; }

    [JsonPropertyName("signInPage")]
    public JSON SignInPage { get; set; }

    [JsonPropertyName("signOutPage")]
    public JSON SignOutPage { get; set; }

    [JsonPropertyName("authErrorPage")]
    public JSON AuthErrorPage { get; set; }

    [JsonPropertyName("accountPage")]
    public JSON AccountPage { get; set; }

    [JsonPropertyName("gamePage")]
    public JSON GamePage { get; set; }

    [JsonPropertyName("contactPage")]
    public JSON ContactPage { get; set; }

    [JsonPropertyName("privacyPolicyPage")]
    public JSON PrivacyPolicyPage { get; set; }

    [JsonPropertyName("aboutPage")]
    public JSON AboutPage { get; set; }

    [JsonPropertyName("announcementPage")]
    public JSON AnnouncementPage { get; set; }

    [JsonPropertyName("gameSlugs")]
    public JSON GameSlugs { get; set; }

    [JsonPropertyName("buildsZonePageSlugs")]
    public JSON BuildsZonePageSlugs { get; set; }

    private LazyProperty<JSON> _buildsZonePage = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON BuildsZonePage => _buildsZonePage.Value(() => GetFirstMethodValue<JSON>("buildsZonePage"));

    [JsonPropertyName("buildsSpecPageSlugs")]
    public JSON BuildsSpecPageSlugs { get; set; }

    private LazyProperty<JSON> _buildsSpecPage = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON BuildsSpecPage => _buildsSpecPage.Value(() => GetFirstMethodValue<JSON>("buildsSpecPage"));

    private LazyProperty<JSON> _buildsClassesAndSpecsPage = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON BuildsClassesAndSpecsPage => _buildsClassesAndSpecsPage.Value(() => GetFirstMethodValue<JSON>("buildsClassesAndSpecsPage"));

    private LazyProperty<JSON> _ability = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON Ability => _ability.Value(() => GetFirstMethodValue<JSON>("ability"));

    private LazyProperty<JSON> _articleCategory = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON ArticleCategory => _articleCategory.Value(() => GetFirstMethodValue<JSON>("articleCategory"));

    [JsonPropertyName("articleCategories")]
    public JSON ArticleCategories { get; set; }

    private LazyProperty<JSON> _articleSlugs = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON ArticleSlugs => _articleSlugs.Value(() => GetFirstMethodValue<JSON>("articleSlugs"));

    private LazyProperty<JSON> _article = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON Article => _article.Value(() => GetFirstMethodValue<JSON>("article"));

    private LazyProperty<JSON> _cmsNavigation = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON CmsNavigation => _cmsNavigation.Value(() => GetFirstMethodValue<JSON>("cmsNavigation"));

    private LazyProperty<JSON> _pageOfArticlePreviews = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON PageOfArticlePreviews => _pageOfArticlePreviews.Value(() => GetFirstMethodValue<JSON>("pageOfArticlePreviews"));

    private LazyProperty<JSON> _snippets = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON Snippets => _snippets.Value(() => GetFirstMethodValue<JSON>("snippets"));

    [JsonPropertyName("articleIndexPage")]
    public JSON ArticleIndexPage { get; set; }

    [JsonPropertyName("playwireAds")]
    public JSON PlaywireAds { get; set; }

    [JsonPropertyName("adPlacements")]
    public JSON AdPlacements { get; set; }

    private LazyProperty<JSON> _reportPage = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON ReportPage => _reportPage.Value(() => GetFirstMethodValue<JSON>("reportPage"));

    private LazyProperty<JSON> _fightPage = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON FightPage => _fightPage.Value(() => GetFirstMethodValue<JSON>("fightPage"));

    private LazyProperty<JSON> _characterPage = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON CharacterPage => _characterPage.Value(() => GetFirstMethodValue<JSON>("characterPage"));

    private LazyProperty<JSON> _characterPageData = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public JSON CharacterPageData => _characterPageData.Value(() => GetFirstMethodValue<JSON>("characterPageData"));

}

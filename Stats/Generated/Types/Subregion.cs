//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace WarcraftLogs.Public;


public static class SubregionExtensions
{
    [GraphMethod("servers")]
    public static ServerPagination Servers(this Subregion  subregion, [GraphArgument("Int")] int? limit = null, [GraphArgument("Int")] int? page = null)
    {
        return subregion.GetMethodValue<ServerPagination>("servers", limit, page);
    }

}

/// <summary>
/// A single subregion. Subregions are used to divide a region into sub-categories, such as French or German subregions of a Europe region.
/// </summary>
public partial class Subregion : GraphQLTypeBase
{
    /// <summary>
    /// The ID of the subregion.
    /// </summary>
    [JsonPropertyName("id")]
    public int Id { get; set; }

    /// <summary>
    /// The localized name of the subregion.
    /// </summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// The region that this subregion is found in.
    /// </summary>
    [JsonPropertyName("region")]
    public Region Region { get; set; }

    private LazyProperty<ServerPagination> _servers = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    [GraphShadowProperty]
    public ServerPagination Servers => _servers.Value(() => GetFirstMethodValue<ServerPagination>("servers"));

}
